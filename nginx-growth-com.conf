server {
    server_name xn--oj4b21j.com www.xn--oj4b21j.com;
    
    # 클라이언트 최대 업로드 크기
    client_max_body_size 100M;
    
    # 프록시 버퍼 설정
    proxy_buffer_size   128k;
    proxy_buffers       4 256k;
    proxy_busy_buffers_size   256k;
    
    # Public 디렉토리의 정적 파일 처리 (level-cards 포함)
    location /level-cards {
        alias /home/ubuntu/vacation/public/level-cards;
        expires 30d;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # 기타 public 파일
    location /images {
        alias /home/ubuntu/vacation/public/images;
        expires 30d;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Next.js 정적 파일 처리
    location /_next/static {
        proxy_pass http://localhost:3000/_next/static;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        
        # 캐싱 설정
        add_header Cache-Control "public, max-age=31536000, immutable";
    }
    
    # 파비콘
    location = /favicon.ico {
        proxy_pass http://localhost:3000/favicon.ico;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        add_header Cache-Control "public, max-age=86400";
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/xn--oj4b21j.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/xn--oj4b21j.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = xn--oj4b21j.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name xn--oj4b21j.com www.xn--oj4b21j.com;
    return 404; # managed by Certbot
}